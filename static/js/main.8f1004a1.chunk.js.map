{"version":3,"sources":["components/Ticket/Ticket.module.scss","components/Checkbox/Checkbox.module.scss","components/Sorting/Sorting.module.scss","pages/Search.module.scss","components/ThemeSwitcher/ThemeSwitcher.module.scss","components/FilterList/FilterList.module.scss","components/TicketList/TicketList.module.scss","components/Alert/Alert.module.scss","components/Logo/Logo.svg","context/ThemeContext/ThemeColors.js","context/ThemeContext/ThemeContext.js","components/Checkbox/Checkbox.js","components/FilterList/FilterList.js","components/Ticket/Ticket.js","components/TicketList/TicketList.js","components/Sorting/Sorting.js","components/Alert/Alert.js","pages/Search.js","components/Logo/Logo.js","components/ThemeSwitcher/ThemeSwitcher.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","lightTheme","darkTheme","ThemeContext","React","createContext","dark","toggle","Checkbox","props","item","checked","useState","isChecked","setIsChecked","useEffect","className","classes","Item","type","onChange","id","viewBox","Checkbox__box","d","Checkbox__check","points","ItemText","value","FilterList","sortTickets","hiddenTickets","sortNonStop","sortStops","transfers","setTransfers","checkID","newChecked","map","changeIsChecked","Title","key","Ticket","ticket","ticketHeader","ticketPrice","price","toLocaleString","ticketCarrier","src","carrier","alt","ticketBody","segments","i","bodyRow","titleRow","origin","destination","textRow","str","dur","slice","split","h","m","sum","Number","newH","Math","floor","newM","formH","formM","splitTimeOut","date","duration","number","hours","round","minutes","durationFunc","stops","length","join","TicketList","tickets","Sorting","sorts","selectTub","setSelectTub","SortingTabs","elem","SortingTab","SortingTab_active","onClick","sortTabs","SortingTitle","Alert","window","location","reload","Search","setTickets","hasError","setHasError","cloneTickets","setCloneTickets","setSortTickets","fetch","then","res","json","searchId","catch","newArr","sort","a","b","firstTicket","reduce","acc","secondTicket","setSortTabs","appContentInner","appInformer","filter","every","some","numb","sort1","sort2","appContent","sorting","Logo","logoSvg","ThemeSwitcher","useContext","Switcher","SwitcherInput","htmlFor","SwitcherLabel","SwitcherToggle","App","Boolean","hostname","match","ReactDOM","render","StrictMode","children","setDark","applyTheme","theme","document","getElementsByTagName","style","cssText","useLayoutEffect","localStorage","getItem","Provider","setItem","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.8f1004a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ticket\":\"Ticket_ticket__1T8no\",\"ticketHeader\":\"Ticket_ticketHeader__2n-lY\",\"ticketPrice\":\"Ticket_ticketPrice__3G7Yj\",\"ticketBody\":\"Ticket_ticketBody__16qF_\",\"bodyRow\":\"Ticket_bodyRow__3KH2P\",\"titleRow\":\"Ticket_titleRow__3DwJT\",\"textRow\":\"Ticket_textRow__3WD3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"Checkbox_Item__1a4e_\",\"ItemText\":\"Checkbox_ItemText__1zqmU\",\"Checkbox\":\"Checkbox_Checkbox__1LWIb\",\"Checkbox__box\":\"Checkbox_Checkbox__box__3roUv\",\"Checkbox__check\":\"Checkbox_Checkbox__check__1MW0s\",\"animBorder\":\"Checkbox_animBorder__3tlie\",\"reverse\":\"Checkbox_reverse__2jJvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SortingTabs\":\"Sorting_SortingTabs__2xZgh\",\"SortingTab\":\"Sorting_SortingTab__XOoGH\",\"SortingTab_active\":\"Sorting_SortingTab_active__3kcI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appInformer\":\"Search_appInformer__3W-Jx\",\"appContentInner\":\"Search_appContentInner__3rag5\",\"appContent\":\"Search_appContent__3T0cx\",\"sorting\":\"Search_sorting__127IK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Switcher\":\"ThemeSwitcher_Switcher__24jPt\",\"SwitcherInput\":\"ThemeSwitcher_SwitcherInput__2llKm\",\"SwitcherLabel\":\"ThemeSwitcher_SwitcherLabel__8uTay\",\"SwitcherToggle\":\"ThemeSwitcher_SwitcherToggle__pAHiU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterList\":\"FilterList_FilterList__3NBb4\",\"Title\":\"FilterList_Title__1J-o0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TicketList\":\"TicketList_TicketList__2FqMo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"Alert_Alert__148YI\"};","module.exports = __webpack_public_path__ + \"static/media/Logo.0c089234.svg\";","export const lightTheme = [\r\n  \"--background-app: #f3f7fa\",\r\n  \"--body-text: #4A4A4A\",\r\n  \"--box-shadow: rgba(0, 0, 0, 0.1)\",\r\n  \"--filter-background: #fff\",\r\n  \"--filter-hover-item: #F1FCFF\",\r\n  \"--filter-text: #4A4A4A\",\r\n  \"--checkbox-box: rgba(154, 187, 206, 1)\",\r\n  \"--checkbox-box-check: #2196F3\",\r\n  \"--sorting-tab-background: #fff\",\r\n  \"--sorting-tab-background-active: #2196F3\",\r\n  \"--sorting-tab-background-hover: #F1FCFF\",\r\n  \"--sorting-tab-text: #4A4A4A\",\r\n  \"--sorting-tab-text-active: #fff\",\r\n  \"--sorting-tab-text-hover: #2196F3\",\r\n  \"--sorting-tab-border: #DFE5EC\",\r\n  \"--sorting-tab-border-hover: #2196F3\",\r\n  \"--ticket-background: #fff\",\r\n  \"--ticket-price: #2196F3\",\r\n  \"--ticket-text-subtitle: #A0B0B9\",\r\n  \"--ticket-text: #4A4A4A\"\r\n];\r\n\r\nexport const darkTheme = [\r\n  \"--background-app: #05263f\",\r\n  \"--body-text: #fff\",\r\n  \"--box-shadow: rgba(0, 0, 0, 0.1)\",\r\n  \"--filter-background: #1e3c52\",\r\n  \"--filter-hover-item: #355064\",\r\n  \"--filter-text: #fff\",\r\n  \"--checkbox-box: rgba(154, 187, 206, 1)\",\r\n  \"--checkbox-box-check: #2196F3\",\r\n  \"--sorting-tab-background: #1e3c52\",\r\n  \"--sorting-tab-background-active: #2196f3\",\r\n  \"--sorting-tab-background-hover: #031b2c\",\r\n  \"--sorting-tab-text: #fff\",\r\n  \"--sorting-tab-text-active: #fff\",\r\n  \"--sorting-tab-text-hover: #fff\",\r\n  \"--sorting-tab-border: #000\",\r\n  \"--sorting-tab-border-hover: #000\",\r\n  \"--ticket-background: #1e3c52\",\r\n  \"--ticket-price: #f57c00\",\r\n  \"--ticket-text-subtitle: #A0B0B9\",\r\n  \"--ticket-text: #fff\"\r\n];\r\n","import React, { useLayoutEffect, useState } from \"react\";\r\nimport { darkTheme, lightTheme } from \"./ThemeColors\";\r\n\r\nexport const ThemeContext = React.createContext({\r\n  dark: false,\r\n  toggle: () => {}\r\n});\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // текущая тема\r\n  const [dark, setDark] = useState(false);\r\n\r\n  // устанавливаем стили css\r\n  const applyTheme = theme => {\r\n    const root = document.getElementsByTagName(\"html\")[0];\r\n    root.style.cssText = theme.join(\";\");\r\n  };\r\n\r\n  // обновляем стили синхронно\r\n  useLayoutEffect(() => {\r\n    // устанавливаем последнюю выбранную пользователем тему\r\n    const lastTheme = window.localStorage.getItem(\"darkTheme\");\r\n\r\n    if (lastTheme === \"true\") {\r\n      setDark(true);\r\n      applyTheme(darkTheme);\r\n    } else {\r\n      setDark(false);\r\n      applyTheme(lightTheme);\r\n    }\r\n  }, [dark]);\r\n\r\n  const toggle = () => {\r\n    setDark(!dark);\r\n    window.localStorage.setItem(\"darkTheme\", !dark);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        dark,\r\n        toggle\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./Checkbox.module.scss\";\r\n\r\nexport const Checkbox = props => {\r\n  const { item, checked } = props;\r\n\r\n  let [isChecked, setIsChecked] = useState(item.isChecked);\r\n\r\n  // отслеживаем -- если изменился isChecked, то обновим состояние\r\n  useEffect(() => {\r\n    setIsChecked(props.item.isChecked);\r\n  }, [props.item.isChecked]);\r\n\r\n  const toggleIsChecked = () => {\r\n    setIsChecked(!isChecked);\r\n    checked(item.id, !isChecked);\r\n  };\r\n\r\n  return (\r\n    <label className={classes.Item}>\r\n      <input type=\"checkbox\" checked={isChecked} onChange={toggleIsChecked} />\r\n      <svg viewBox=\"0 0 100 100\" className={classes.Checkbox}>\r\n        <path\r\n          className={classes.Checkbox__box}\r\n          d=\"M82,89H18c-3.87,0-7-3.13-7-7V18c0-3.87,3.13-7,7-7h64c3.87,0,7,3.13,7,7v64C89,85.87,85.87,89,82,89z\"\r\n        />\r\n        <polyline\r\n          className={classes.Checkbox__check}\r\n          points=\"25.5,53.5 39.5,67.5 72.5,34.5 \"\r\n        />\r\n      </svg>\r\n      <span className={classes.ItemText}>{item.value}</span>\r\n    </label>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Checkbox } from \"../Checkbox/Checkbox\";\r\nimport classes from \"./FilterList.module.scss\";\r\n\r\nexport const FilterList = props => {\r\n  const { hiddenTickets, sortNonStop, sortStops } = props.sortTickets;\r\n\r\n  const [transfers, setTransfers] = useState([\r\n    { value: \"Все\", id: \"checkedAll\", isChecked: true },\r\n    { value: \"Без пересадок\", id: \"nonStop\", isChecked: true },\r\n    { value: \"1 пересадка\", id: 1, isChecked: true },\r\n    { value: \"2 пересадки\", id: 2, isChecked: true },\r\n    { value: \"3 пересадки\", id: 3, isChecked: true }\r\n  ]);\r\n\r\n  /* универсальная функция которой будем переключать чекбоксы */\r\n  const checkID = (id, isChecked) => {\r\n    if (isChecked) {\r\n      const newChecked = transfers.map(item =>\r\n        item.id === id ? { ...item, isChecked: true } : { ...item }\r\n      );\r\n      setTransfers(newChecked);\r\n    } else {\r\n      const newChecked = transfers.map(item => {\r\n        if (item.id === id || item.id === \"checkedAll\") {\r\n          return { ...item, isChecked: false };\r\n        } else {\r\n          return { ...item };\r\n        }\r\n      });\r\n      setTransfers(newChecked);\r\n    }\r\n  };\r\n\r\n  const changeIsChecked = (id, isChecked) => {\r\n    // если выбраны \"все\" билеты, меняем их isChecked\r\n    if (id === \"checkedAll\") {\r\n      if (isChecked === true) {\r\n        const newChecked = transfers.map(item => ({\r\n          ...item,\r\n          isChecked: true\r\n        }));\r\n        setTransfers(newChecked);\r\n      } else {\r\n        const newChecked = transfers.map(item => ({\r\n          ...item,\r\n          isChecked: false\r\n        }));\r\n        setTransfers(newChecked);\r\n      }\r\n      hiddenTickets(isChecked);\r\n    }\r\n\r\n    // если выбрано 'Без пересадок'\r\n    else if (id === \"nonStop\") {\r\n      checkID(id, isChecked);\r\n      sortNonStop(isChecked);\r\n    }\r\n    // все остальные варианты пересадок\r\n    else {\r\n      checkID(id, isChecked);\r\n      sortStops(id, isChecked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.FilterList}>\r\n      <h2 className={classes.Title}>Количество пересадок</h2>\r\n      <ul>\r\n        {transfers.map(item => {\r\n          return (\r\n            <li key={item.id}>\r\n              <Checkbox item={item} checked={changeIsChecked} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Ticket.module.scss\";\r\n\r\nexport const Ticket = ({ ticket }) => {\r\n  const picAvs = \"http://pics.avs.io/99/36/\";\r\n\r\n  // вырезаем время вылета + получаем время прилета\r\n  const splitTimeOut = (str, dur) => {\r\n    const [, time] = str.slice(0, -1).split(\"T\");\r\n    const [h, m] = time.split(\":\");\r\n    const sum = Number(h) * 60 + Number(m) + dur;\r\n    const newH =\r\n      sum / 60 >= 24 ? Math.floor(sum / 60 - 24) : Math.floor(sum / 60);\r\n    const newM = sum % 60;\r\n    const formH = newH < 10 ? `0${newH}` : newH;\r\n    const formM = newM < 10 ? `0${newM}` : newM;\r\n\r\n    return `${h}:${m} - ${formH}:${formM}`;\r\n  }\r\n\r\n  // переводим длительность перелета(минуты) в формат 00:00\r\n  const durationFunc = number => {\r\n    const hours = Math.round(number / 60);\r\n    const minutes = number % 60;\r\n    return `${hours}ч : ${minutes}м`;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.ticket}>\r\n      <div className={classes.ticketHeader}>\r\n        <div className={classes.ticketPrice}>\r\n          {`${ticket.price.toLocaleString()} P`}\r\n        </div>\r\n        <div className={classes.ticketCarrier}>\r\n          <img src={`${picAvs}${ticket.carrier}.png`} alt={ticket.carrier} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.ticketBody}>\r\n        {ticket.segments.map((item, i) => (\r\n          <div className={classes.bodyRow} key={`segmentRow-${i}`}>\r\n            <div>\r\n              <span className={classes.titleRow}>\r\n                {item.origin} – {item.destination}\r\n              </span>\r\n              <span className={classes.textRow}>\r\n                {splitTimeOut(item.date, item.duration)}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className={classes.titleRow}>В пути</span>\r\n              <span className={classes.textRow}>\r\n                {durationFunc(item.duration)}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className={classes.titleRow}>\r\n                {item.stops.length > 0\r\n                  ? `${item.stops.length} пересадк${\r\n                      item.stops.length === 1 ? \"a\" : \"и\"\r\n                    }`\r\n                  : \"Без пересадок\"}\r\n              </span>\r\n              <span className={classes.textRow}>{item.stops.join(\", \")}</span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Ticket } from \"../Ticket/Ticket\";\r\nimport classes from \"./TicketList.module.scss\";\r\n\r\nexport const TicketList = ({ tickets }) => {\r\n  return (\r\n    <ul className={classes.TicketList}>\r\n      {tickets.map((item, i) => (\r\n        <li key={`ticketKey-${i}`}>\r\n          <Ticket ticket={item} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./Sorting.module.scss\";\r\n\r\nexport const Sorting = ({ sorts }) => {\r\n  const [selectTub, setSelectTub] = useState(\"low price\");\r\n\r\n  const paramSorting = [\r\n    { value: \"Самый дешевый\", id: \"low price\" },\r\n    { value: \"Самый быстрый\", id: \"fastest\" }\r\n  ];\r\n\r\n  const checkTub = id => {\r\n    if (id === selectTub) {\r\n      return;\r\n    }\r\n    setSelectTub(id);\r\n    sorts.sortTabs(id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul className={classes.SortingTabs}>\r\n        {paramSorting.map(elem => (\r\n          <li\r\n            key={elem.id}\r\n            className={\r\n              selectTub === elem.id\r\n                ? [classes.SortingTab, classes.SortingTab_active].join(\" \")\r\n                : classes.SortingTab\r\n            }\r\n            onClick={() => checkTub(elem.id)}\r\n          >\r\n            <span className={classes.SortingTitle}>{elem.value}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React from \"react\";\r\nimport classes from \"./Alert.module.scss\";\r\n\r\nexport const Alert = () => {\r\n  return (\r\n    <div className={classes.Alert}>\r\n      <span>😟 Что-то пошло не так</span>\r\n      <button onClick={() => window.location.reload()}>\r\n        Обновить страницу\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./Search.module.scss\";\r\nimport { FilterList } from \"../components/FilterList/FilterList\";\r\nimport { TicketList } from \"../components/TicketList/TicketList\";\r\nimport { Sorting } from \"../components/Sorting/Sorting\";\r\nimport { Alert } from \"../components/Alert/Alert\";\r\n\r\nexport const Search = () => {\r\n  const [tickets, setTickets] = useState([]); // неотсортированный список билетов\r\n  const [hasError, setHasError] = useState(false);\r\n  const [cloneTickets, setCloneTickets] = useState(null); // массив билетов который будем сортировать по пересадкам\r\n  const [selectTub, setSelectTub] = useState(\"low price\"); // таб для автоматической сортировки билетов (цена/скорость)\r\n\r\n  // отсортированные по всем параметрам билеты для отрисовки\r\n  const [sortTickets, setSortTickets] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://front-test.beta.aviasales.ru/search\")\r\n      .then(res => res.json())\r\n      .then(({ searchId }) =>\r\n        fetch(\r\n          `https://front-test.beta.aviasales.ru/tickets?searchId=${searchId}`\r\n        )\r\n      )\r\n      .then(res => res.json())\r\n      .then(({ tickets }) => {\r\n        setTickets(tickets.slice(0, 5));\r\n        setCloneTickets(tickets.slice(0, 5));\r\n      })\r\n      .catch(() => setHasError(true));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function setSortTabs() {\r\n      if (!cloneTickets) return;\r\n      if (selectTub === \"low price\") {\r\n        const newArr = [...cloneTickets].sort((a, b) =>\r\n          a.price > b.price ? 1 : -1\r\n        );\r\n        setSortTickets(newArr);\r\n      }\r\n      if (selectTub === \"fastest\") {\r\n        const newArr = [...cloneTickets].sort((a, b) => {\r\n          const firstTicket = a.segments.reduce(\r\n            (acc, i) => i.duration + acc,\r\n            0\r\n          );\r\n          const secondTicket = b.segments.reduce(\r\n            (acc, i) => i.duration + acc,\r\n            0\r\n          );\r\n\r\n          if (firstTicket > secondTicket) {\r\n            return 1;\r\n          } else if (firstTicket < secondTicket) {\r\n            return -1;\r\n          } else {\r\n            return 0;\r\n          }\r\n        });\r\n        setSortTickets(newArr);\r\n      }\r\n    }\r\n    setSortTabs();\r\n  }, [cloneTickets, selectTub]);\r\n\r\n  // скрыть/показать все билеты\r\n  const hiddenTickets = isChecked => {\r\n    isChecked ? setCloneTickets(tickets) : setCloneTickets([]);\r\n  };\r\n\r\n  // билеты без пересадок\r\n  const sortNonStop = isChecked => {\r\n    if (isChecked) {\r\n      const newArr = tickets.filter(item => {\r\n        return item.segments.every(i => i.stops.length === 0); // every вернет true, если ВСЕ маршруты без пересадок\r\n      });\r\n      setCloneTickets([...cloneTickets, ...newArr]); // вернем в state новый массив с билетами без пересадок\r\n    } else {\r\n      const newArr = cloneTickets.filter(item => {\r\n        return item.segments.some(i => i.stops.length > 0); // оставим только те билеты, у которых хотя бы один маршрут с пересадкой\r\n      });\r\n      setCloneTickets(newArr);\r\n    }\r\n  };\r\n\r\n  /* универсальная функция которой будем сортировать билеты \r\n    в зависимости от количества пересадок */\r\n  const sortStops = (numb, isChecked) => {\r\n    if (isChecked) {\r\n      const newArr = tickets.filter(item => {\r\n        // вернет 'true' если хотя бы один маршрут в билете будет с заданным числом пересадок\r\n        const sort1 = item.segments.some(i => i.stops.length === numb);\r\n        // вернет 'true' если каждый маршрут меньше или равняется заданному числу пересадок\r\n        const sort2 = item.segments.every(i => i.stops.length <= numb);\r\n        return sort1 && sort2;\r\n      });\r\n      setCloneTickets([...cloneTickets, ...newArr]);\r\n    } else {\r\n      const newArr = cloneTickets.filter(item => {\r\n        const sort1 = item.segments.some(i => i.stops.length > numb);\r\n        const sort2 = item.segments.every(i => i.stops.length < numb);\r\n        return sort1 || sort2;\r\n      });\r\n      setCloneTickets(newArr);\r\n    }\r\n  };\r\n\r\n  // функция для изменения state 'selectTub' для сортировки по табам\r\n  const sortTabs = id => {\r\n    setSelectTub(id);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.appContentInner}>\r\n      <div className={classes.appInformer}>\r\n        <FilterList sortTickets={{ hiddenTickets, sortNonStop, sortStops }} />\r\n      </div>\r\n      <div className={classes.appContent}>\r\n        <div className={classes.sorting}>\r\n          <Sorting sorts={{ sortTabs }} />\r\n        </div>\r\n        {sortTickets ? (\r\n          <TicketList tickets={sortTickets} />\r\n        ) : hasError ? (\r\n          <Alert />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport logoSvg from \"./Logo.svg\";\r\n\r\nexport const Logo = () => (\r\n  <>\r\n    <img src={logoSvg} alt=\"logo\" />\r\n  </>\r\n);\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./ThemeSwitcher.module.scss\";\r\nimport { ThemeContext } from \"../../context/ThemeContext/ThemeContext\";\r\n\r\nexport const ThemeSwitcher = () => {\r\n  const { dark, toggle } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <div className={classes.Switcher}>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"theme-switcher\"\r\n        className={classes.SwitcherInput}\r\n        checked={dark}\r\n        onChange={() => toggle()}\r\n      />\r\n      <label htmlFor=\"theme-switcher\" className={classes.SwitcherLabel}>\r\n        <span className={classes.SwitcherToggle}></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Search } from \"./pages/Search\";\nimport { Logo } from \"./components/Logo/Logo\";\nimport { ThemeSwitcher } from \"./components/ThemeSwitcher/ThemeSwitcher\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"app__inner\">\n        <div className=\"navbar\">\n          <Logo />\n          <ThemeSwitcher />\n        </div>\n        <section className=\"app__section\">\n          <Search />\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { ThemeProvider } from \"./context/ThemeContext/ThemeContext\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}